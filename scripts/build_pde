#!/bin/sh
#
#        Copyright (C) 2011 Shawn Wilson
#        shawn@ch2a.ca
#        
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

#
# This script is used for building libarduino.a from the arduino web site.
# It will download the code, extract it and make all the libraries.
# 

# PARAMETERS
PDE_FILE=$1
PROGRAM=${PDE_FILE%.pde}

# Set up file paths.
prefix=`pwd`/test
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
localstatedir=${prefix}/build/${PROGRAM}
datarootdir=..
datadir=${datarootdir}/data
srcdir=${prefix}/src/${PROGRAM}


########
# functions
########

# This figures out the absolute path of any give path.
abspath () {
   dir=$1

   # Basically, if the path begins with a '/', it's absolute.  Otherwise,
   # it's relative so tack on the pwd results.
   case $dir in
      /*) echo $1 ;;
      *) echo `pwd`/$1 ;;
   esac
} /* abspath */


# This function pulls out all the relative headers in a c/c++/pde file.
relhdrs () {
   srcfile=$1

   grep "^#include" $srcfile | cut -d\" -f2 -s
} /* relhdrs */



#######
# main section
#######

##### Set up the program sources #####

# Make the source directory and add a symlink to the pde file.
mkdir -p ${srcdir}
cp ${datadir}/main.c ${srcdir}
ln -s `abspath $PDE_FILE` ${srcdir}/arduino_program.pde

# Scan the pde file for relative headers and make symlinks
# to the files in the src directory so it compiles properly.
for file in `relhdrs $PDE_FILE` ; do 
   ln -s `abspath $file` ${srcdir}
done


##### Set up the build directory #####

# Create links to the files in the source directory.
ln -s ${srcdir}/* $localstatedir

# Copy over the custom make file.
cp ${datadir}/Makefile.pde ${localstatedir}/Makefile


######### Make the program ########

echo "Cross compiling..."
make -C $localstatedir


# Check to make sure it finished successfully.
if [ -f ${localstatedir}/arduino_program.hex ];
then
   echo
   echo "Success!!"
   echo
   exit 0
else
   echo  
   echo "Something broke - cannot find ${localstatedir}/arduino_program.hex."
   echo
   exit 1
fi
